// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Atom from "../atom.js";
import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as JsCookie from "js-cookie";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Utils from "jotai/utils";

function Lobby$default(Props) {
  React.useEffect((function () {
          var socket = new WebSocket("ws://localhost:8080/ws");
          socket.addEventListener("open", (function (param) {
                  var nickname = JsCookie.default.get("nickname");
                  var userDict = {};
                  userDict["nickname"] = nickname;
                  var containerDict = {};
                  containerDict["event"] = "enter";
                  containerDict["message"] = JSON.stringify(userDict);
                  var reqDict = JSON.stringify(containerDict);
                  socket.send(reqDict);
                  
                }));
          socket.addEventListener("message", (function ($$event) {
                  var parsed_data = JSON.parse(JSON.stringify($$event.data));
                  console.log("Message from server ", $$event.data);
                  var setValue = Utils.useUpdateAtom(Atom.users_atom);
                  var match = parsed_data.event;
                  switch (match) {
                    case "enter" :
                        return Curry._1(setValue, (function (users) {
                                      return Belt_Array.concat(users, [parsed_data.message]);
                                    }));
                    case "exit" :
                        return Curry._1(setValue, (function (users) {
                                      return Belt_Array.keep(users, (function (user) {
                                                    return user.id !== parsed_data.message.id;
                                                  }));
                                    }));
                    default:
                      return ;
                  }
                }));
          
        }), []);
  return React.createElement("div", {
              className: "m-8"
            }, React.createElement("form", {
                  className: "flex flex-col gap-y-4",
                  onSubmit: (function (e) {
                      e.preventDefault();
                      
                    })
                }, React.createElement("input", {
                      className: "daimonion text-xs text-black px-2 py-1 rounded-md outline-0 caret-rose-800",
                      name: "subject",
                      placeholder: "subject",
                      type: "text"
                    }), React.createElement("input", {
                      className: "daimonion text-xs text-black px-2 py-1 rounded-md outline-0 caret-rose-800",
                      name: "answer",
                      placeholder: "answer",
                      type: "text"
                    }), React.createElement("button", {
                      className: "daimoniontext-4xl w-full flex items-center justify-center\n          px-2 py-1 border border-transparent text-base font-medium rounded-md\n          text-white bg-rose-800 hover:bg-rose-900\n          hover:ring-2 hover:ring-white ring-inset"
                    }, "Ready!")));
}

var $$default = Lobby$default;

export {
  $$default ,
  $$default as default,
  
}
/* Atom Not a pure module */
